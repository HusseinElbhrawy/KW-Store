// Mocks generated by Mockito 5.4.0 from annotations
// in kw_store/test/modules/home/data/repositories/home_repository_implementation_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:kw_store/core/api/api_consumer.dart' as _i2;
import 'package:kw_store/modules/home/data/datasources/home_remote_data_source.dart'
    as _i7;
import 'package:kw_store/modules/home/data/models/cart_model.dart' as _i5;
import 'package:kw_store/modules/home/data/models/categories_model.dart' as _i4;
import 'package:kw_store/modules/home/data/models/favorites_model.dart' as _i6;
import 'package:kw_store/modules/home/data/models/home_model.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiConsumer_0 extends _i1.SmartFake implements _i2.ApiConsumer {
  _FakeApiConsumer_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHomeModel_1 extends _i1.SmartFake implements _i3.HomeModel {
  _FakeHomeModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCategoriesModel_2 extends _i1.SmartFake
    implements _i4.CategoriesModel {
  _FakeCategoriesModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAllCartModel_3 extends _i1.SmartFake implements _i5.AllCartModel {
  _FakeAllCartModel_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCartModel_4 extends _i1.SmartFake implements _i5.CartModel {
  _FakeCartModel_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFavoritesModel_5 extends _i1.SmartFake
    implements _i6.FavoritesModel {
  _FakeFavoritesModel_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeALlFavoritesModel_6 extends _i1.SmartFake
    implements _i6.ALlFavoritesModel {
  _FakeALlFavoritesModel_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSpecificCategoryModel_7 extends _i1.SmartFake
    implements _i4.SpecificCategoryModel {
  _FakeSpecificCategoryModel_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomeRemoteDataSourceImplementation].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRemoteDataSourceImplementation extends _i1.Mock
    implements _i7.HomeRemoteDataSourceImplementation {
  MockHomeRemoteDataSourceImplementation() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApiConsumer get apiConsumer => (super.noSuchMethod(
        Invocation.getter(#apiConsumer),
        returnValue: _FakeApiConsumer_0(
          this,
          Invocation.getter(#apiConsumer),
        ),
      ) as _i2.ApiConsumer);
  @override
  _i8.Future<_i3.HomeModel> getHomeData() => (super.noSuchMethod(
        Invocation.method(
          #getHomeData,
          [],
        ),
        returnValue: _i8.Future<_i3.HomeModel>.value(_FakeHomeModel_1(
          this,
          Invocation.method(
            #getHomeData,
            [],
          ),
        )),
      ) as _i8.Future<_i3.HomeModel>);
  @override
  _i8.Future<_i4.CategoriesModel> getCategoriesData() => (super.noSuchMethod(
        Invocation.method(
          #getCategoriesData,
          [],
        ),
        returnValue:
            _i8.Future<_i4.CategoriesModel>.value(_FakeCategoriesModel_2(
          this,
          Invocation.method(
            #getCategoriesData,
            [],
          ),
        )),
      ) as _i8.Future<_i4.CategoriesModel>);
  @override
  _i8.Future<_i5.AllCartModel> getCart() => (super.noSuchMethod(
        Invocation.method(
          #getCart,
          [],
        ),
        returnValue: _i8.Future<_i5.AllCartModel>.value(_FakeAllCartModel_3(
          this,
          Invocation.method(
            #getCart,
            [],
          ),
        )),
      ) as _i8.Future<_i5.AllCartModel>);
  @override
  _i8.Future<_i5.CartModel> addOrRemoveFromCart({required String? productId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrRemoveFromCart,
          [],
          {#productId: productId},
        ),
        returnValue: _i8.Future<_i5.CartModel>.value(_FakeCartModel_4(
          this,
          Invocation.method(
            #addOrRemoveFromCart,
            [],
            {#productId: productId},
          ),
        )),
      ) as _i8.Future<_i5.CartModel>);
  @override
  _i8.Future<_i6.FavoritesModel> addOrRemoveFromFavorites(
          {required String? productId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrRemoveFromFavorites,
          [],
          {#productId: productId},
        ),
        returnValue: _i8.Future<_i6.FavoritesModel>.value(_FakeFavoritesModel_5(
          this,
          Invocation.method(
            #addOrRemoveFromFavorites,
            [],
            {#productId: productId},
          ),
        )),
      ) as _i8.Future<_i6.FavoritesModel>);
  @override
  _i8.Future<_i6.ALlFavoritesModel> getFavorites() => (super.noSuchMethod(
        Invocation.method(
          #getFavorites,
          [],
        ),
        returnValue:
            _i8.Future<_i6.ALlFavoritesModel>.value(_FakeALlFavoritesModel_6(
          this,
          Invocation.method(
            #getFavorites,
            [],
          ),
        )),
      ) as _i8.Future<_i6.ALlFavoritesModel>);
  @override
  _i8.Future<_i4.SpecificCategoryModel> getSpecificCategory(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSpecificCategory,
          [id],
        ),
        returnValue: _i8.Future<_i4.SpecificCategoryModel>.value(
            _FakeSpecificCategoryModel_7(
          this,
          Invocation.method(
            #getSpecificCategory,
            [id],
          ),
        )),
      ) as _i8.Future<_i4.SpecificCategoryModel>);
}
